// Mocks generated by Mockito 5.0.16 from annotations
// in tv/test/presentation/pages/home_tv_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;
import 'dart:ui' as _i9;

import 'package:core/utils/state_enum.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv/domain/entities/tv.dart' as _i6;
import 'package:tv/domain/usecases/get_now_playing_tv.dart' as _i2;
import 'package:tv/domain/usecases/get_popular_tv.dart' as _i3;
import 'package:tv/domain/usecases/get_top_rated_tv.dart' as _i4;
import 'package:tv/presentation/provider/tv_list_notifier.dart' as _i5;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetNowPlayingTvs_0 extends _i1.Fake implements _i2.GetNowPlayingTvs {
}

class _FakeGetPopularTvs_1 extends _i1.Fake implements _i3.GetPopularTvs {}

class _FakeGetTopRatedTvs_2 extends _i1.Fake implements _i4.GetTopRatedTvs {}

/// A class which mocks [TvListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvListNotifier extends _i1.Mock implements _i5.TvListNotifier {
  MockTvListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetNowPlayingTvs get getNowPlayingTvs =>
      (super.noSuchMethod(Invocation.getter(#getNowPlayingTvs),
          returnValue: _FakeGetNowPlayingTvs_0()) as _i2.GetNowPlayingTvs);
  @override
  _i3.GetPopularTvs get getPopularTvs =>
      (super.noSuchMethod(Invocation.getter(#getPopularTvs),
          returnValue: _FakeGetPopularTvs_1()) as _i3.GetPopularTvs);
  @override
  _i4.GetTopRatedTvs get getTopRatedTvs =>
      (super.noSuchMethod(Invocation.getter(#getTopRatedTvs),
          returnValue: _FakeGetTopRatedTvs_2()) as _i4.GetTopRatedTvs);
  @override
  List<_i6.Tv> get nowPlayingTvs =>
      (super.noSuchMethod(Invocation.getter(#nowPlayingTvs),
          returnValue: <_i6.Tv>[]) as List<_i6.Tv>);
  @override
  _i7.RequestState get nowPlayingState =>
      (super.noSuchMethod(Invocation.getter(#nowPlayingState),
          returnValue: _i7.RequestState.Empty) as _i7.RequestState);
  @override
  List<_i6.Tv> get popularTvs => (super
          .noSuchMethod(Invocation.getter(#popularTvs), returnValue: <_i6.Tv>[])
      as List<_i6.Tv>);
  @override
  _i7.RequestState get popularTvsState =>
      (super.noSuchMethod(Invocation.getter(#popularTvsState),
          returnValue: _i7.RequestState.Empty) as _i7.RequestState);
  @override
  List<_i6.Tv> get topRatedTvs =>
      (super.noSuchMethod(Invocation.getter(#topRatedTvs),
          returnValue: <_i6.Tv>[]) as List<_i6.Tv>);
  @override
  _i7.RequestState get topRatedTvsState =>
      (super.noSuchMethod(Invocation.getter(#topRatedTvsState),
          returnValue: _i7.RequestState.Empty) as _i7.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i8.Future<void> fetchNowPlayingTvs() =>
      (super.noSuchMethod(Invocation.method(#fetchNowPlayingTvs, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> fetchPopularTvs() =>
      (super.noSuchMethod(Invocation.method(#fetchPopularTvs, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> fetchTopRatedTvs() =>
      (super.noSuchMethod(Invocation.method(#fetchTopRatedTvs, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  void addListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i9.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
