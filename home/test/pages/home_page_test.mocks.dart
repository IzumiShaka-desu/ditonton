// Mocks generated by Mockito 5.0.16 from annotations
// in home/test/pages/home_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i27;
import 'dart:ui' as _i28;

import 'package:core/utils/state_enum.dart' as _i26;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movie/domain/entities/movie.dart' as _i25;
import 'package:movie/domain/entities/movie_detail.dart' as _i10;
import 'package:movie/domain/usecases/get_movie_detail.dart' as _i5;
import 'package:movie/domain/usecases/get_movie_recommendations.dart' as _i6;
import 'package:movie/domain/usecases/get_now_playing_movies.dart' as _i2;
import 'package:movie/domain/usecases/get_popular_movies.dart' as _i3;
import 'package:movie/domain/usecases/get_top_rated_movies.dart' as _i4;
import 'package:movie/domain/usecases/get_watchlist_movies.dart' as _i12;
import 'package:movie/domain/usecases/get_watchlist_status.dart' as _i7;
import 'package:movie/domain/usecases/remove_watchlist.dart' as _i9;
import 'package:movie/domain/usecases/save_watchlist.dart' as _i8;
import 'package:movie/domain/usecases/search_movies.dart' as _i11;
import 'package:movie/presentation/provider/movie_detail_notifier.dart' as _i29;
import 'package:movie/presentation/provider/movie_list_notifier.dart' as _i24;
import 'package:movie/presentation/provider/movie_search_notifier.dart' as _i30;
import 'package:movie/presentation/provider/popular_movies_notifier.dart'
    as _i32;
import 'package:movie/presentation/provider/top_rated_movies_notifier.dart'
    as _i31;
import 'package:movie/presentation/provider/watchlist_movie_notifier.dart'
    as _i33;
import 'package:tv/domain/entities/tv.dart' as _i35;
import 'package:tv/domain/entities/tv_detail.dart' as _i21;
import 'package:tv/domain/usecases/get_now_playing_tv.dart' as _i13;
import 'package:tv/domain/usecases/get_popular_tv.dart' as _i14;
import 'package:tv/domain/usecases/get_top_rated_tv.dart' as _i15;
import 'package:tv/domain/usecases/get_tv_detail.dart' as _i16;
import 'package:tv/domain/usecases/get_tv_recommendations.dart' as _i17;
import 'package:tv/domain/usecases/get_watchlist_tv.dart' as _i23;
import 'package:tv/domain/usecases/get_watchlist_tv_status.dart' as _i18;
import 'package:tv/domain/usecases/remove_tv_watchlist.dart' as _i20;
import 'package:tv/domain/usecases/save_tv_watchlist.dart' as _i19;
import 'package:tv/domain/usecases/search_tv.dart' as _i22;
import 'package:tv/presentation/provider/popular_tvs_notifier.dart' as _i39;
import 'package:tv/presentation/provider/top_rated_tv_notifier.dart' as _i38;
import 'package:tv/presentation/provider/tv_detail_notifier.dart' as _i36;
import 'package:tv/presentation/provider/tv_list_notifier.dart' as _i34;
import 'package:tv/presentation/provider/tv_search_notifier.dart' as _i37;
import 'package:tv/presentation/provider/watch_list_tv_notifier.dart' as _i40;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetNowPlayingMovies_0 extends _i1.Fake
    implements _i2.GetNowPlayingMovies {}

class _FakeGetPopularMovies_1 extends _i1.Fake implements _i3.GetPopularMovies {
}

class _FakeGetTopRatedMovies_2 extends _i1.Fake
    implements _i4.GetTopRatedMovies {}

class _FakeGetMovieDetail_3 extends _i1.Fake implements _i5.GetMovieDetail {}

class _FakeGetMovieRecommendations_4 extends _i1.Fake
    implements _i6.GetMovieRecommendations {}

class _FakeGetWatchListStatus_5 extends _i1.Fake
    implements _i7.GetWatchListStatus {}

class _FakeSaveWatchlist_6 extends _i1.Fake implements _i8.SaveWatchlist {}

class _FakeRemoveWatchlist_7 extends _i1.Fake implements _i9.RemoveWatchlist {}

class _FakeMovieDetail_8 extends _i1.Fake implements _i10.MovieDetail {}

class _FakeSearchMovies_9 extends _i1.Fake implements _i11.SearchMovies {}

class _FakeGetWatchlistMovies_10 extends _i1.Fake
    implements _i12.GetWatchlistMovies {}

class _FakeGetNowPlayingTvs_11 extends _i1.Fake
    implements _i13.GetNowPlayingTvs {}

class _FakeGetPopularTvs_12 extends _i1.Fake implements _i14.GetPopularTvs {}

class _FakeGetTopRatedTvs_13 extends _i1.Fake implements _i15.GetTopRatedTvs {}

class _FakeGetTvDetail_14 extends _i1.Fake implements _i16.GetTvDetail {}

class _FakeGetTvRecommendations_15 extends _i1.Fake
    implements _i17.GetTvRecommendations {}

class _FakeGetTvWatchListStatus_16 extends _i1.Fake
    implements _i18.GetTvWatchListStatus {}

class _FakeSaveTvWatchlist_17 extends _i1.Fake implements _i19.SaveTvWatchlist {
}

class _FakeRemoveTvWatchlist_18 extends _i1.Fake
    implements _i20.RemoveTvWatchlist {}

class _FakeTvDetail_19 extends _i1.Fake implements _i21.TvDetail {}

class _FakeSearchTvs_20 extends _i1.Fake implements _i22.SearchTvs {}

class _FakeGetWatchlistTvs_21 extends _i1.Fake implements _i23.GetWatchlistTvs {
}

/// A class which mocks [MovieListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieListNotifier extends _i1.Mock implements _i24.MovieListNotifier {
  MockMovieListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetNowPlayingMovies get getNowPlayingMovies => (super.noSuchMethod(
      Invocation.getter(#getNowPlayingMovies),
      returnValue: _FakeGetNowPlayingMovies_0()) as _i2.GetNowPlayingMovies);
  @override
  _i3.GetPopularMovies get getPopularMovies =>
      (super.noSuchMethod(Invocation.getter(#getPopularMovies),
          returnValue: _FakeGetPopularMovies_1()) as _i3.GetPopularMovies);
  @override
  _i4.GetTopRatedMovies get getTopRatedMovies =>
      (super.noSuchMethod(Invocation.getter(#getTopRatedMovies),
          returnValue: _FakeGetTopRatedMovies_2()) as _i4.GetTopRatedMovies);
  @override
  List<_i25.Movie> get nowPlayingMovies =>
      (super.noSuchMethod(Invocation.getter(#nowPlayingMovies),
          returnValue: <_i25.Movie>[]) as List<_i25.Movie>);
  @override
  _i26.RequestState get nowPlayingState =>
      (super.noSuchMethod(Invocation.getter(#nowPlayingState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i25.Movie> get popularMovies =>
      (super.noSuchMethod(Invocation.getter(#popularMovies),
          returnValue: <_i25.Movie>[]) as List<_i25.Movie>);
  @override
  _i26.RequestState get popularMoviesState =>
      (super.noSuchMethod(Invocation.getter(#popularMoviesState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i25.Movie> get topRatedMovies =>
      (super.noSuchMethod(Invocation.getter(#topRatedMovies),
          returnValue: <_i25.Movie>[]) as List<_i25.Movie>);
  @override
  _i26.RequestState get topRatedMoviesState =>
      (super.noSuchMethod(Invocation.getter(#topRatedMoviesState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchNowPlayingMovies() => (super.noSuchMethod(
      Invocation.method(#fetchNowPlayingMovies, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  _i27.Future<void> fetchPopularMovies() => (super.noSuchMethod(
      Invocation.method(#fetchPopularMovies, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  _i27.Future<void> fetchTopRatedMovies() => (super.noSuchMethod(
      Invocation.method(#fetchTopRatedMovies, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieDetailNotifier extends _i1.Mock
    implements _i29.MovieDetailNotifier {
  MockMovieDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.GetMovieDetail get getMovieDetail =>
      (super.noSuchMethod(Invocation.getter(#getMovieDetail),
          returnValue: _FakeGetMovieDetail_3()) as _i5.GetMovieDetail);
  @override
  _i6.GetMovieRecommendations get getMovieRecommendations =>
      (super.noSuchMethod(Invocation.getter(#getMovieRecommendations),
              returnValue: _FakeGetMovieRecommendations_4())
          as _i6.GetMovieRecommendations);
  @override
  _i7.GetWatchListStatus get getWatchListStatus =>
      (super.noSuchMethod(Invocation.getter(#getWatchListStatus),
          returnValue: _FakeGetWatchListStatus_5()) as _i7.GetWatchListStatus);
  @override
  _i8.SaveWatchlist get saveWatchlist =>
      (super.noSuchMethod(Invocation.getter(#saveWatchlist),
          returnValue: _FakeSaveWatchlist_6()) as _i8.SaveWatchlist);
  @override
  _i9.RemoveWatchlist get removeWatchlist =>
      (super.noSuchMethod(Invocation.getter(#removeWatchlist),
          returnValue: _FakeRemoveWatchlist_7()) as _i9.RemoveWatchlist);
  @override
  _i10.MovieDetail get movie => (super.noSuchMethod(Invocation.getter(#movie),
      returnValue: _FakeMovieDetail_8()) as _i10.MovieDetail);
  @override
  _i26.RequestState get movieState =>
      (super.noSuchMethod(Invocation.getter(#movieState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i25.Movie> get movieRecommendations =>
      (super.noSuchMethod(Invocation.getter(#movieRecommendations),
          returnValue: <_i25.Movie>[]) as List<_i25.Movie>);
  @override
  _i26.RequestState get recommendationState =>
      (super.noSuchMethod(Invocation.getter(#recommendationState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(Invocation.getter(#isAddedToWatchlist),
          returnValue: false) as bool);
  @override
  String get watchlistMessage =>
      (super.noSuchMethod(Invocation.getter(#watchlistMessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchMovieDetail(int? id) => (super.noSuchMethod(
      Invocation.method(#fetchMovieDetail, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  _i27.Future<void> addWatchlist(_i10.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#addWatchlist, [movie]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i27.Future<void>);
  @override
  _i27.Future<void> removeFromWatchlist(_i10.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#removeFromWatchlist, [movie]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i27.Future<void>);
  @override
  _i27.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
      Invocation.method(#loadWatchlistStatus, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [MovieSearchNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieSearchNotifier extends _i1.Mock
    implements _i30.MovieSearchNotifier {
  MockMovieSearchNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.SearchMovies get searchMovies =>
      (super.noSuchMethod(Invocation.getter(#searchMovies),
          returnValue: _FakeSearchMovies_9()) as _i11.SearchMovies);
  @override
  _i26.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i25.Movie> get searchResult =>
      (super.noSuchMethod(Invocation.getter(#searchResult),
          returnValue: <_i25.Movie>[]) as List<_i25.Movie>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchMovieSearch(String? query) => (super.noSuchMethod(
      Invocation.method(#fetchMovieSearch, [query]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TopRatedMoviesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedMoviesNotifier extends _i1.Mock
    implements _i31.TopRatedMoviesNotifier {
  MockTopRatedMoviesNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.GetTopRatedMovies get getTopRatedMovies =>
      (super.noSuchMethod(Invocation.getter(#getTopRatedMovies),
          returnValue: _FakeGetTopRatedMovies_2()) as _i4.GetTopRatedMovies);
  @override
  _i26.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i25.Movie> get movies => (super.noSuchMethod(Invocation.getter(#movies),
      returnValue: <_i25.Movie>[]) as List<_i25.Movie>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchTopRatedMovies() => (super.noSuchMethod(
      Invocation.method(#fetchTopRatedMovies, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PopularMoviesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularMoviesNotifier extends _i1.Mock
    implements _i32.PopularMoviesNotifier {
  MockPopularMoviesNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.GetPopularMovies get getPopularMovies =>
      (super.noSuchMethod(Invocation.getter(#getPopularMovies),
          returnValue: _FakeGetPopularMovies_1()) as _i3.GetPopularMovies);
  @override
  _i26.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i25.Movie> get movies => (super.noSuchMethod(Invocation.getter(#movies),
      returnValue: <_i25.Movie>[]) as List<_i25.Movie>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchPopularMovies() => (super.noSuchMethod(
      Invocation.method(#fetchPopularMovies, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [WatchlistMovieNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistMovieNotifier extends _i1.Mock
    implements _i33.WatchlistMovieNotifier {
  MockWatchlistMovieNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.GetWatchlistMovies get getWatchlistMovies => (super.noSuchMethod(
      Invocation.getter(#getWatchlistMovies),
      returnValue: _FakeGetWatchlistMovies_10()) as _i12.GetWatchlistMovies);
  @override
  List<_i25.Movie> get watchlistMovies =>
      (super.noSuchMethod(Invocation.getter(#watchlistMovies),
          returnValue: <_i25.Movie>[]) as List<_i25.Movie>);
  @override
  _i26.RequestState get watchlistState =>
      (super.noSuchMethod(Invocation.getter(#watchlistState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchWatchlistMovies() => (super.noSuchMethod(
      Invocation.method(#fetchWatchlistMovies, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TvListNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvListNotifier extends _i1.Mock implements _i34.TvListNotifier {
  MockTvListNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.GetNowPlayingTvs get getNowPlayingTvs =>
      (super.noSuchMethod(Invocation.getter(#getNowPlayingTvs),
          returnValue: _FakeGetNowPlayingTvs_11()) as _i13.GetNowPlayingTvs);
  @override
  _i14.GetPopularTvs get getPopularTvs =>
      (super.noSuchMethod(Invocation.getter(#getPopularTvs),
          returnValue: _FakeGetPopularTvs_12()) as _i14.GetPopularTvs);
  @override
  _i15.GetTopRatedTvs get getTopRatedTvs =>
      (super.noSuchMethod(Invocation.getter(#getTopRatedTvs),
          returnValue: _FakeGetTopRatedTvs_13()) as _i15.GetTopRatedTvs);
  @override
  List<_i35.Tv> get nowPlayingTvs =>
      (super.noSuchMethod(Invocation.getter(#nowPlayingTvs),
          returnValue: <_i35.Tv>[]) as List<_i35.Tv>);
  @override
  _i26.RequestState get nowPlayingState =>
      (super.noSuchMethod(Invocation.getter(#nowPlayingState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i35.Tv> get popularTvs =>
      (super.noSuchMethod(Invocation.getter(#popularTvs),
          returnValue: <_i35.Tv>[]) as List<_i35.Tv>);
  @override
  _i26.RequestState get popularTvsState =>
      (super.noSuchMethod(Invocation.getter(#popularTvsState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i35.Tv> get topRatedTvs =>
      (super.noSuchMethod(Invocation.getter(#topRatedTvs),
          returnValue: <_i35.Tv>[]) as List<_i35.Tv>);
  @override
  _i26.RequestState get topRatedTvsState =>
      (super.noSuchMethod(Invocation.getter(#topRatedTvsState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchNowPlayingTvs() => (super.noSuchMethod(
      Invocation.method(#fetchNowPlayingTvs, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  _i27.Future<void> fetchPopularTvs() => (super.noSuchMethod(
      Invocation.method(#fetchPopularTvs, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  _i27.Future<void> fetchTopRatedTvs() => (super.noSuchMethod(
      Invocation.method(#fetchTopRatedTvs, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TvDetailNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvDetailNotifier extends _i1.Mock implements _i36.TvDetailNotifier {
  MockTvDetailNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i16.GetTvDetail get getTvDetail =>
      (super.noSuchMethod(Invocation.getter(#getTvDetail),
          returnValue: _FakeGetTvDetail_14()) as _i16.GetTvDetail);
  @override
  _i17.GetTvRecommendations get getTvRecommendations =>
      (super.noSuchMethod(Invocation.getter(#getTvRecommendations),
              returnValue: _FakeGetTvRecommendations_15())
          as _i17.GetTvRecommendations);
  @override
  _i18.GetTvWatchListStatus get getWatchListStatus =>
      (super.noSuchMethod(Invocation.getter(#getWatchListStatus),
              returnValue: _FakeGetTvWatchListStatus_16())
          as _i18.GetTvWatchListStatus);
  @override
  _i19.SaveTvWatchlist get saveWatchlist =>
      (super.noSuchMethod(Invocation.getter(#saveWatchlist),
          returnValue: _FakeSaveTvWatchlist_17()) as _i19.SaveTvWatchlist);
  @override
  _i20.RemoveTvWatchlist get removeWatchlist =>
      (super.noSuchMethod(Invocation.getter(#removeWatchlist),
          returnValue: _FakeRemoveTvWatchlist_18()) as _i20.RemoveTvWatchlist);
  @override
  _i21.TvDetail get tv => (super.noSuchMethod(Invocation.getter(#tv),
      returnValue: _FakeTvDetail_19()) as _i21.TvDetail);
  @override
  _i26.RequestState get tvState =>
      (super.noSuchMethod(Invocation.getter(#tvState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i35.Tv> get tvRecommendations =>
      (super.noSuchMethod(Invocation.getter(#tvRecommendations),
          returnValue: <_i35.Tv>[]) as List<_i35.Tv>);
  @override
  _i26.RequestState get recommendationState =>
      (super.noSuchMethod(Invocation.getter(#recommendationState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get isAddedToWatchlist =>
      (super.noSuchMethod(Invocation.getter(#isAddedToWatchlist),
          returnValue: false) as bool);
  @override
  String get watchlistMessage =>
      (super.noSuchMethod(Invocation.getter(#watchlistMessage), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchTvDetail(int? id) => (super.noSuchMethod(
      Invocation.method(#fetchTvDetail, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  _i27.Future<void> addWatchlist(_i21.TvDetail? tv) => (super.noSuchMethod(
      Invocation.method(#addWatchlist, [tv]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  _i27.Future<void> removeFromWatchlist(_i21.TvDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#removeFromWatchlist, [tv]),
              returnValue: Future<void>.value(),
              returnValueForMissingStub: Future<void>.value())
          as _i27.Future<void>);
  @override
  _i27.Future<void> loadWatchlistStatus(int? id) => (super.noSuchMethod(
      Invocation.method(#loadWatchlistStatus, [id]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TvSearchNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvSearchNotifier extends _i1.Mock implements _i37.TvSearchNotifier {
  MockTvSearchNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i22.SearchTvs get searchTvs =>
      (super.noSuchMethod(Invocation.getter(#searchTvs),
          returnValue: _FakeSearchTvs_20()) as _i22.SearchTvs);
  @override
  _i26.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i35.Tv> get searchResult =>
      (super.noSuchMethod(Invocation.getter(#searchResult),
          returnValue: <_i35.Tv>[]) as List<_i35.Tv>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchTvSearch(String? query) => (super.noSuchMethod(
      Invocation.method(#fetchTvSearch, [query]),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [TopRatedTvsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockTopRatedTvsNotifier extends _i1.Mock
    implements _i38.TopRatedTvsNotifier {
  MockTopRatedTvsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i15.GetTopRatedTvs get getTopRatedTvs =>
      (super.noSuchMethod(Invocation.getter(#getTopRatedTvs),
          returnValue: _FakeGetTopRatedTvs_13()) as _i15.GetTopRatedTvs);
  @override
  _i26.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i35.Tv> get tvs =>
      (super.noSuchMethod(Invocation.getter(#tvs), returnValue: <_i35.Tv>[])
          as List<_i35.Tv>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchTopRatedTvs() => (super.noSuchMethod(
      Invocation.method(#fetchTopRatedTvs, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [PopularTvsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockPopularTvsNotifier extends _i1.Mock
    implements _i39.PopularTvsNotifier {
  MockPopularTvsNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.GetPopularTvs get getPopularTvs =>
      (super.noSuchMethod(Invocation.getter(#getPopularTvs),
          returnValue: _FakeGetPopularTvs_12()) as _i14.GetPopularTvs);
  @override
  _i26.RequestState get state => (super.noSuchMethod(Invocation.getter(#state),
      returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  List<_i35.Tv> get tvs =>
      (super.noSuchMethod(Invocation.getter(#tvs), returnValue: <_i35.Tv>[])
          as List<_i35.Tv>);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchPopularTvs() => (super.noSuchMethod(
      Invocation.method(#fetchPopularTvs, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}

/// A class which mocks [WatchlistTvNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockWatchlistTvNotifier extends _i1.Mock
    implements _i40.WatchlistTvNotifier {
  MockWatchlistTvNotifier() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i23.GetWatchlistTvs get getWatchlistTvs =>
      (super.noSuchMethod(Invocation.getter(#getWatchlistTvs),
          returnValue: _FakeGetWatchlistTvs_21()) as _i23.GetWatchlistTvs);
  @override
  List<_i35.Tv> get watchlistTvs =>
      (super.noSuchMethod(Invocation.getter(#watchlistTvs),
          returnValue: <_i35.Tv>[]) as List<_i35.Tv>);
  @override
  _i26.RequestState get watchlistState =>
      (super.noSuchMethod(Invocation.getter(#watchlistState),
          returnValue: _i26.RequestState.Empty) as _i26.RequestState);
  @override
  String get message =>
      (super.noSuchMethod(Invocation.getter(#message), returnValue: '')
          as String);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i27.Future<void> fetchWatchlistTvs() => (super.noSuchMethod(
      Invocation.method(#fetchWatchlistTvs, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i27.Future<void>);
  @override
  void addListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i28.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
  @override
  String toString() => super.toString();
}
